{"ast":null,"code":"var _jsxFileName = \"C:\\\\For Personal Use\\\\Django Projects\\\\github\\\\django-react\\\\a\\\\reactjs\\\\src\\\\App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport cookie from 'react-cookies';\nimport 'whatwg-fetch';\nimport React, { Component } from 'react';\nimport PostInline from './compenents/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: []\n    };\n  }\n\n  getdata() {\n    let thisComp = this;\n    let lookup = {\n      method: \"GET\",\n      headers: {\n        'content-type': 'application/json'\n      }\n    };\n    fetch('api1', lookup).then(function (response) {\n      return response.json();\n    }).then(function (resposeData) {\n      console.log(resposeData);\n      thisComp.setState({\n        posts: resposeData\n      });\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  }\n\n  postdata() {\n    const csrf = cookie.load('csrfToken');\n    let data = {\n      'name': '',\n      'price': undefined,\n      'quantity': undefined\n    };\n    let lookup = '';\n\n    if (csrf != undefined) {\n      let lookup = {\n        method: \"POST\",\n        headers: {\n          'content-type': 'application/json',\n          'X-CSRFToken': csrf\n        },\n        body: JSON.stringify(data),\n        Credentials: 'include'\n      };\n    }\n\n    fetch('api1', lookup).then(function (response) {\n      return response.json();\n    }).then(function (resposeData) {\n      console.log(resposeData);\n    }).catch(function (error) {\n      console.log('error', error);\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      posts: []\n    });\n    this.getdata();\n  }\n\n  render() {\n    const {\n      posts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.posts.map(post => /*#__PURE__*/_jsxDEV(PostInline, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 39\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/For Personal Use/Django Projects/github/django-react/a/reactjs/src/App.js"],"names":["cookie","React","Component","PostInline","App","state","posts","getdata","thisComp","lookup","method","headers","fetch","then","response","json","resposeData","console","log","setState","catch","error","postdata","csrf","load","data","undefined","body","JSON","stringify","Credentials","componentDidMount","render","map","post","id"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,eAAnB;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;;AAEA,MAAMC,GAAN,SAAmBF,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BG,KAD2B,GACnB;AACNC,MAAAA,KAAK,EAAC;AADA,KADmB;AAAA;;AAI3BC,EAAAA,OAAO,GACP;AACE,QAAIC,QAAQ,GAAG,IAAf;AACE,QAAIC,MAAM,GAAG;AACTC,MAAAA,MAAM,EAAC,KADE;AAETC,MAAAA,OAAO,EAAC;AACN,wBAAe;AADT;AAFC,KAAb;AAOFC,IAAAA,KAAK,CAAC,MAAD,EAAQH,MAAR,CAAL,CACCI,IADD,CACM,UAASC,QAAT,EAAkB;AACtB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHD,EAGGF,IAHH,CAGQ,UAASG,WAAT,EAAqB;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACER,MAAAA,QAAQ,CAACW,QAAT,CAAkB;AAChBb,QAAAA,KAAK,EAACU;AADU,OAAlB;AAGH,KARD,EAQGI,KARH,CAQS,UAASC,KAAT,EAAe;AACtBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBG,KAApB;AACD,KAVD;AAWD;;AACDC,EAAAA,QAAQ,GACR;AACE,UAAMC,IAAI,GAAGvB,MAAM,CAACwB,IAAP,CAAY,WAAZ,CAAb;AACA,QAAIC,IAAI,GAAG;AACT,cAAO,EADE;AAET,eAAQC,SAFC;AAGT,kBAAWA;AAHF,KAAX;AAKA,QAAIjB,MAAM,GAAG,EAAb;;AACA,QAAGc,IAAI,IAAGG,SAAV,EACA;AACE,UAAIjB,MAAM,GAAG;AACXC,QAAAA,MAAM,EAAC,MADI;AAEXC,QAAAA,OAAO,EAAC;AACN,0BAAe,kBADT;AAEN,yBAAcY;AAFR,SAFG;AAMXI,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CANM;AAOXK,QAAAA,WAAW,EAAC;AAPD,OAAb;AASD;;AACDlB,IAAAA,KAAK,CAAC,MAAD,EAAQH,MAAR,CAAL,CACCI,IADD,CACM,UAASC,QAAT,EAAkB;AACtB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAHD,EAGGF,IAHH,CAGQ,UAASG,WAAT,EAAqB;AAC3BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACD,KALD,EAKGI,KALH,CAKS,UAASC,KAAT,EAAe;AACtBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBG,KAApB;AACD,KAPD;AAQD;;AAGDU,EAAAA,iBAAiB,GACjB;AACE,SAAKZ,QAAL,CAAc;AACZb,MAAAA,KAAK,EAAC;AADM,KAAd;AAGA,SAAKC,OAAL;AACD;;AAGDyB,EAAAA,MAAM,GACN;AACE,UAAM;AAAC1B,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACA,wBACE;AAAA,gBACG,KAAKA,KAAL,CAAWC,KAAX,CAAiB2B,GAAjB,CAAqBC,IAAI,iBAAI,QAAC,UAAD;AAA4B,QAAA,IAAI,EAAIA;AAApC,SAAmBA,IAAI,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,cAA7B;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AA3E0B;;AA+E7B,eAAe/B,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport cookie from 'react-cookies'\nimport 'whatwg-fetch'\nimport React, { Component } from 'react';\nimport PostInline from './compenents/post'\n\nclass App  extends Component {\n  state = {\n    posts:[],\n  }\n  getdata()\n  {\n    let thisComp = this;\n      let lookup = {\n          method:\"GET\",\n          headers:{\n            'content-type':'application/json'\n            } \n        }\n    \n    fetch('api1',lookup)\n    .then(function(response){\n      return response.json();\n    }).then(function(resposeData){\n      console.log(resposeData)\n        thisComp.setState({\n          posts:resposeData\n        });\n    }).catch(function(error){\n      console.log('error',error);\n    })\n  }\n  postdata()\n  {\n    const csrf = cookie.load('csrfToken');\n    let data = {\n      'name':'',\n      'price':undefined,\n      'quantity':undefined\n    }\n    let lookup = ''\n    if(csrf!= undefined)\n    {\n      let lookup = {\n        method:\"POST\",\n        headers:{\n          'content-type':'application/json',\n          'X-CSRFToken':csrf\n        },\n        body:JSON.stringify(data),\n        Credentials:'include'\n      }\n    }\n    fetch('api1',lookup)\n    .then(function(response){\n      return response.json();\n    }).then(function(resposeData){\n      console.log(resposeData)\n    }).catch(function(error){\n      console.log('error',error);\n    })\n  }\n\n\n  componentDidMount()\n  {\n    this.setState({\n      posts:[]\n    })\n    this.getdata();\n  }\n\n\n  render()\n  {\n    const {posts} = this.state\n    return (\n      <div>\n        {this.state.posts.map(post => <PostInline key = {post.id} post = {post}/>)}\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}