{"ast":null,"code":"var _jsxFileName = \"C:\\\\For Personal Use\\\\Django Projects\\\\github\\\\django-react\\\\a\\\\reactjs\\\\src\\\\App.js\";\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport cookie from 'react-cookies';\nimport 'whatwg-fetch';\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PostInline from './compenents/post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      posts: []\n    };\n\n    this.getdata = () => {\n      let y = this;\n      let lookup = {\n        method: \"GET\",\n        headers: {\n          'content-type': 'application/json'\n        }\n      };\n      fetch('api1/', lookup).then(function (response) {\n        return response.json();\n      }).then(function (posts) {\n        console.log(y);\n        y.setState({\n          posts: posts\n        });\n      }).catch(function (error) {\n        console.log('error', error);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      posts: []\n    });\n    this.getdata();\n  }\n\n  render() {\n    const {\n      posts\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Hello World\", this.state.posts.map(post => /*#__PURE__*/_jsxDEV(PostInline, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 39\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/For Personal Use/Django Projects/github/django-react/a/reactjs/src/App.js"],"names":["cookie","React","Component","ReactDOM","PostInline","App","state","posts","getdata","y","lookup","method","headers","fetch","then","response","json","console","log","setState","catch","error","componentDidMount","render","map","post","id"],"mappings":";;AACA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,eAAnB;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;;AAEA,MAAMC,GAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BI,KAD2B,GACnB;AACNC,MAAAA,KAAK,EAAC;AADA,KADmB;;AAAA,SAI3BC,OAJ2B,GAIjB,MAAM;AACd,UAAIC,CAAC,GAAG,IAAR;AACE,UAAIC,MAAM,GAAG;AACTC,QAAAA,MAAM,EAAC,KADE;AAETC,QAAAA,OAAO,EAAC;AACN,0BAAe;AADT;AAFC,OAAb;AAMFC,MAAAA,KAAK,CAAC,OAAD,EAASH,MAAT,CAAL,CACCI,IADD,CACM,UAASC,QAAT,EAAkB;AACtB,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,OAHD,EAGGF,IAHH,CAGQ,UAASP,KAAT,EAAe;AACrBU,QAAAA,OAAO,CAACC,GAAR,CAAYT,CAAZ;AACAA,QAAAA,CAAC,CAACU,QAAF,CAAW;AAACZ,UAAAA,KAAK,EAACA;AAAP,SAAX;AACD,OAND,EAMGa,KANH,CAMS,UAASC,KAAT,EAAe;AACtBJ,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBG,KAApB;AACD,OARD;AASD,KArB0B;AAAA;;AAsB7BC,EAAAA,iBAAiB,GACf;AACI,SAAKH,QAAL,CAAc;AACZZ,MAAAA,KAAK,EAAC;AADM,KAAd;AAGA,SAAKC,OAAL;AACH;;AAGDe,EAAAA,MAAM,GACN;AACE,UAAM;AAAChB,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACA,wBACE;AAAA,gCAEG,KAAKA,KAAL,CAAWC,KAAX,CAAiBiB,GAAjB,CAAqBC,IAAI,iBAAI,QAAC,UAAD;AAA4B,QAAA,IAAI,EAAIA;AAApC,SAAmBA,IAAI,CAACC,EAAxB;AAAA;AAAA;AAAA;AAAA,cAA7B,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAxC0B;;AA4C7B,eAAerB,GAAf","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport cookie from 'react-cookies'\nimport 'whatwg-fetch'\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport PostInline from './compenents/post'\n\nclass App  extends Component {\n  state = {\n    posts:[]\n  }\n  getdata = () => {\n    let y = this;\n      let lookup = {\n          method:\"GET\",\n          headers:{\n            'content-type':'application/json'\n            } \n        }\n    fetch('api1/',lookup)\n    .then(function(response){\n      return response.json();\n    }).then(function(posts){\n      console.log(y);\n      y.setState({posts:posts});\n    }).catch(function(error){\n      console.log('error',error);\n    })\n  }\ncomponentDidMount()\n  {\n      this.setState({\n        posts:[]\n      });\n      this.getdata();\n  }\n\n\n  render()\n  {\n    const {posts} = this.state\n    return (\n      <div>\n        Hello World\n        {this.state.posts.map(post => <PostInline key = {post.id} post = {post}/>)}\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}